{"ast":null,"code":"var _jsxFileName = \"/Users/newbins/Documents/react/todo/src/functionBased/components/TodoContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport TodosList from \"./TodosList\";\nimport Header from \"./Header\";\nimport InputTodo from \"./InputTodo\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoContainer = () => {\n  _s();\n\n  const [todos, setTodos] = useState(getInitialTodos());\n\n  const handleChange = id => {\n    setTodos(prevState => prevState.map(todo => {\n      if (todo.id === id) {\n        return { ...todo,\n          completed: !todo.completed\n        };\n      }\n\n      return todo;\n    }));\n  };\n\n  const delTodo = id => {\n    setTodos([...todos.filter(todo => {\n      return todo.id !== id;\n    })]);\n  };\n\n  const addTodoItem = title => {\n    const newTodo = {\n      id: uuidv4(),\n      title: title,\n      completed: false\n    };\n    setTodos([...todos, newTodo]);\n  };\n\n  const setUpdate = (updatedTitle, id) => {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        todo.title = updatedTitle;\n      }\n\n      return todo;\n    }));\n  }; // useEffect(() => {\n  //   console.log(\"test run\")\n  //   // getting stored items\n  //   const temp = localStorage.getItem(\"todos\")\n  //   const loadedTodos = JSON.parse(temp)\n  //   if (loadedTodos) {\n  //     setTodos(loadedTodos)\n  //   }\n  // }, [setTodos]);\n\n\n  function getInitialTodos() {\n    //getting stored items\n    const temp = localStorage.getItem(\"todos\");\n    const savedTodos = JSON.parse(temp);\n    return savedTodos || [];\n  }\n\n  useEffect(() => {\n    // storing todos items\n    const temp = JSON.stringify(todos);\n    localStorage.setItem(\"todos\", temp);\n  }, [todos]);\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoContainer, \"B4yiTGRG5gixI8OeEpsoG+37Evk=\");\n\n_c = TodoContainer;\nexport default TodoContainer; // import React from \"react\";\n// import TodosList from \"./TodosList\";\n// import Header from \"./Header\";\n// import InputTodo from \"./InputTodo\";\n// import { v4 as uuidv4 } from \"uuid\";\n// class TodoContainer extends React.Component {\n//   state = {\n//     todos: [],\n//   };\n//   handleChange = (id) => {\n//     this.setState((prevState) => ({\n//       todos: prevState.todos.map((todo) => {\n//         if (todo.id === id) {\n//           return {\n//             ...todo,\n//             completed: !todo.completed,\n//           };\n//         }\n//         return todo;\n//       }),\n//     }));\n//   };\n//   delTodo = (id) => {\n//     this.setState({\n//       todos: [\n//         ...this.state.todos.filter((todo) => {\n//           return todo.id !== id;\n//         }),\n//       ],\n//     });\n//   };\n//   addTodoItem = (title) => {\n//     const newTodo = {\n//       id: uuidv4(),\n//       title: title,\n//       completed: false,\n//     };\n//     this.setState({\n//       todos: [...this.state.todos, newTodo],\n//     });\n//   };\n//   setUpdate = (updatedTitle, id) => {\n//     this.setState({\n//       todos: this.state.todos.map((todo) => {\n//         if (todo.id === id) {\n//           todo.title = updatedTitle;\n//         }\n//         return todo;\n//       }),\n//     });\n//   };\n//   //   componentDidMount() {\n//   //     fetch(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\n//   //       .then(response => response.json())\n//   //       .then(data => this.setState({ todos: data }));\n//   //   }\n//   componentDidMount() {\n//     const temp = localStorage.getItem(\"todos\");\n//     const loadedTodos = JSON.parse(temp);\n//     if (loadedTodos) {\n//       this.setState({\n//         todos: loadedTodos,\n//       });\n//     }\n//   }\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.todos !== this.state.todos) {\n//       const temp = JSON.stringify(this.state.todos);\n//       localStorage.setItem(\"todos\", temp);\n//     }\n//   }\n//   render() {\n//     return (\n//       <div className=\"container\">\n//         <div className=\"inner\">\n//           <Header />\n//           <InputTodo addTodoProps={this.addTodoItem} />\n//           <TodosList\n//             todos={this.state.todos}\n//             handleChangeProps={this.handleChange}\n//             deleteTodoProps={this.delTodo}\n//             setUpdate={this.setUpdate}\n//           />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// export default TodoContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoContainer\");","map":{"version":3,"sources":["/Users/newbins/Documents/react/todo/src/functionBased/components/TodoContainer.js"],"names":["React","useState","useEffect","Route","Switch","TodosList","Header","InputTodo","v4","uuidv4","TodoContainer","todos","setTodos","getInitialTodos","handleChange","id","prevState","map","todo","completed","delTodo","filter","addTodoItem","title","newTodo","setUpdate","updatedTitle","temp","localStorage","getItem","savedTodos","JSON","parse","stringify","setItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AAGA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACY,eAAe,EAAhB,CAAlC;;AAEA,QAAMC,YAAY,GAAIC,EAAD,IAAQ;AAC3BH,IAAAA,QAAQ,CAAEI,SAAD,IACPA,SAAS,CAACC,GAAV,CAAeC,IAAD,IAAU;AACtB,UAAIA,IAAI,CAACH,EAAL,KAAYA,EAAhB,EAAoB;AAClB,eAAO,EACL,GAAGG,IADE;AAELC,UAAAA,SAAS,EAAE,CAACD,IAAI,CAACC;AAFZ,SAAP;AAID;;AACD,aAAOD,IAAP;AACD,KARD,CADM,CAAR;AAWD,GAZD;;AAcA,QAAME,OAAO,GAAIL,EAAD,IAAQ;AACtBH,IAAAA,QAAQ,CAAC,CACP,GAAGD,KAAK,CAACU,MAAN,CAAcH,IAAD,IAAU;AACxB,aAAOA,IAAI,CAACH,EAAL,KAAYA,EAAnB;AACD,KAFE,CADI,CAAD,CAAR;AAKD,GAND;;AAQA,QAAMO,WAAW,GAAIC,KAAD,IAAW;AAC7B,UAAMC,OAAO,GAAG;AACdT,MAAAA,EAAE,EAAEN,MAAM,EADI;AAEdc,MAAAA,KAAK,EAAEA,KAFO;AAGdJ,MAAAA,SAAS,EAAE;AAHG,KAAhB;AAKAP,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWa,OAAX,CAAD,CAAR;AACD,GAPD;;AASA,QAAMC,SAAS,GAAG,CAACC,YAAD,EAAeX,EAAf,KAAsB;AACtCH,IAAAA,QAAQ,CACND,KAAK,CAACM,GAAN,CAAWC,IAAD,IAAU;AAClB,UAAIA,IAAI,CAACH,EAAL,KAAYA,EAAhB,EAAoB;AAClBG,QAAAA,IAAI,CAACK,KAAL,GAAaG,YAAb;AACD;;AACD,aAAOR,IAAP;AACD,KALD,CADM,CAAR;AAQD,GATD,CAlC0B,CA6C1B;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACA,WAASL,eAAT,GAA2B;AACzB;AACA,UAAMc,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAb;AACA,UAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAnB;AACA,WAAOG,UAAU,IAAI,EAArB;AACD;;AAED5B,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMyB,IAAI,GAAGI,IAAI,CAACE,SAAL,CAAetB,KAAf,CAAb;AACAiB,IAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BP,IAA9B;AACD,GAJQ,EAIN,CAAChB,KAAD,CAJM,CAAT;AAMA,sBACE,QAAC,KAAD;AAAO,IAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1ED;;GAAMD,a;;KAAAA,a;AA4EN,eAAeA,aAAf,C,CAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\"\n\n\nimport TodosList from \"./TodosList\";\nimport Header from \"./Header\";\nimport InputTodo from \"./InputTodo\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst TodoContainer = () => {\n  const [todos, setTodos] = useState(getInitialTodos());\n\n  const handleChange = (id) => {\n    setTodos((prevState) =>\n      prevState.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n        return todo;\n      })\n    );\n  };\n\n  const delTodo = (id) => {\n    setTodos([\n      ...todos.filter((todo) => {\n        return todo.id !== id;\n      }),\n    ]);\n  };\n\n  const addTodoItem = (title) => {\n    const newTodo = {\n      id: uuidv4(),\n      title: title,\n      completed: false,\n    };\n    setTodos([...todos, newTodo]);\n  };\n\n  const setUpdate = (updatedTitle, id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          todo.title = updatedTitle;\n        }\n        return todo;\n      })\n    );\n  };\n\n  // useEffect(() => {\n  //   console.log(\"test run\")\n\n  //   // getting stored items\n  //   const temp = localStorage.getItem(\"todos\")\n  //   const loadedTodos = JSON.parse(temp)\n\n  //   if (loadedTodos) {\n  //     setTodos(loadedTodos)\n  //   }\n  // }, [setTodos]);\n  function getInitialTodos() {\n    //getting stored items\n    const temp = localStorage.getItem(\"todos\")\n    const savedTodos = JSON.parse(temp)\n    return savedTodos || []\n  }\n\n  useEffect(() => {\n    // storing todos items\n    const temp = JSON.stringify(todos)\n    localStorage.setItem(\"todos\", temp)\n  }, [todos])\n\n  return (\n    <Route path=\"/\">\n\n    </Route>\n  );\n};\n\nexport default TodoContainer;\n\n// import React from \"react\";\n\n// import TodosList from \"./TodosList\";\n// import Header from \"./Header\";\n// import InputTodo from \"./InputTodo\";\n\n// import { v4 as uuidv4 } from \"uuid\";\n\n// class TodoContainer extends React.Component {\n//   state = {\n//     todos: [],\n//   };\n\n//   handleChange = (id) => {\n//     this.setState((prevState) => ({\n//       todos: prevState.todos.map((todo) => {\n//         if (todo.id === id) {\n//           return {\n//             ...todo,\n//             completed: !todo.completed,\n//           };\n//         }\n//         return todo;\n//       }),\n//     }));\n//   };\n\n//   delTodo = (id) => {\n//     this.setState({\n//       todos: [\n//         ...this.state.todos.filter((todo) => {\n//           return todo.id !== id;\n//         }),\n//       ],\n//     });\n//   };\n\n//   addTodoItem = (title) => {\n//     const newTodo = {\n//       id: uuidv4(),\n//       title: title,\n//       completed: false,\n//     };\n//     this.setState({\n//       todos: [...this.state.todos, newTodo],\n//     });\n//   };\n\n//   setUpdate = (updatedTitle, id) => {\n//     this.setState({\n//       todos: this.state.todos.map((todo) => {\n//         if (todo.id === id) {\n//           todo.title = updatedTitle;\n//         }\n//         return todo;\n//       }),\n//     });\n//   };\n\n//   //   componentDidMount() {\n//   //     fetch(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\n//   //       .then(response => response.json())\n//   //       .then(data => this.setState({ todos: data }));\n//   //   }\n//   componentDidMount() {\n//     const temp = localStorage.getItem(\"todos\");\n//     const loadedTodos = JSON.parse(temp);\n//     if (loadedTodos) {\n//       this.setState({\n//         todos: loadedTodos,\n//       });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.todos !== this.state.todos) {\n//       const temp = JSON.stringify(this.state.todos);\n//       localStorage.setItem(\"todos\", temp);\n//     }\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"container\">\n//         <div className=\"inner\">\n//           <Header />\n//           <InputTodo addTodoProps={this.addTodoItem} />\n//           <TodosList\n//             todos={this.state.todos}\n//             handleChangeProps={this.handleChange}\n//             deleteTodoProps={this.delTodo}\n//             setUpdate={this.setUpdate}\n//           />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default TodoContainer;\n"]},"metadata":{},"sourceType":"module"}