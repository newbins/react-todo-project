{"ast":null,"code":"import _toConsumableArray from\"/Users/newbins/Documents/react/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/newbins/Documents/react/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/newbins/Documents/react/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Route,Switch}from\"react-router-dom\";import TodosList from\"./TodosList\";import Header from\"./Header\";import InputTodo from\"./InputTodo\";import About from\"../pages/About\";import NotMatch from\"../pages/NotMatch\";import Navbar from\"./Navbar\";import{v4 as uuidv4}from\"uuid\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var TodoContainer=function TodoContainer(){var _useState=useState(getInitialTodos()),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];var handleChange=function handleChange(id){setTodos(function(prevState){return prevState.map(function(todo){if(todo.id===id){return _objectSpread(_objectSpread({},todo),{},{completed:!todo.completed});}return todo;});});};var delTodo=function delTodo(id){setTodos(_toConsumableArray(todos.filter(function(todo){return todo.id!==id;})));};var addTodoItem=function addTodoItem(title){var newTodo={id:uuidv4(),title:title,completed:false};setTodos([].concat(_toConsumableArray(todos),[newTodo]));};var setUpdate=function setUpdate(updatedTitle,id){setTodos(todos.map(function(todo){if(todo.id===id){todo.title=updatedTitle;}return todo;}));};// useEffect(() => {\n//   console.log(\"test run\")\n//   // getting stored items\n//   const temp = localStorage.getItem(\"todos\")\n//   const loadedTodos = JSON.parse(temp)\n//   if (loadedTodos) {\n//     setTodos(loadedTodos)\n//   }\n// }, [setTodos]);\nfunction getInitialTodos(){//getting stored items\nvar temp=localStorage.getItem(\"todos\");var savedTodos=JSON.parse(temp);return savedTodos||[];}useEffect(function(){// storing todos items\nvar temp=JSON.stringify(todos);localStorage.setItem(\"todos\",temp);},[todos]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"inner\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(InputTodo,{addTodoProps:addTodoItem}),/*#__PURE__*/_jsx(TodosList,{todos:todos,handleChangeProps:handleChange,deleteTodoProps:delTodo,setUpdate:setUpdate})]})})}),/*#__PURE__*/_jsx(Route,{path:\"/about\",children:/*#__PURE__*/_jsx(About,{})}),/*#__PURE__*/_jsx(Route,{path:\"*\",children:/*#__PURE__*/_jsx(NotMatch,{})})]})]});};export default TodoContainer;// import React from \"react\";\n// import TodosList from \"./TodosList\";\n// import Header from \"./Header\";\n// import InputTodo from \"./InputTodo\";\n// import { v4 as uuidv4 } from \"uuid\";\n// class TodoContainer extends React.Component {\n//   state = {\n//     todos: [],\n//   };\n//   handleChange = (id) => {\n//     this.setState((prevState) => ({\n//       todos: prevState.todos.map((todo) => {\n//         if (todo.id === id) {\n//           return {\n//             ...todo,\n//             completed: !todo.completed,\n//           };\n//         }\n//         return todo;\n//       }),\n//     }));\n//   };\n//   delTodo = (id) => {\n//     this.setState({\n//       todos: [\n//         ...this.state.todos.filter((todo) => {\n//           return todo.id !== id;\n//         }),\n//       ],\n//     });\n//   };\n//   addTodoItem = (title) => {\n//     const newTodo = {\n//       id: uuidv4(),\n//       title: title,\n//       completed: false,\n//     };\n//     this.setState({\n//       todos: [...this.state.todos, newTodo],\n//     });\n//   };\n//   setUpdate = (updatedTitle, id) => {\n//     this.setState({\n//       todos: this.state.todos.map((todo) => {\n//         if (todo.id === id) {\n//           todo.title = updatedTitle;\n//         }\n//         return todo;\n//       }),\n//     });\n//   };\n//   //   componentDidMount() {\n//   //     fetch(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\n//   //       .then(response => response.json())\n//   //       .then(data => this.setState({ todos: data }));\n//   //   }\n//   componentDidMount() {\n//     const temp = localStorage.getItem(\"todos\");\n//     const loadedTodos = JSON.parse(temp);\n//     if (loadedTodos) {\n//       this.setState({\n//         todos: loadedTodos,\n//       });\n//     }\n//   }\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.todos !== this.state.todos) {\n//       const temp = JSON.stringify(this.state.todos);\n//       localStorage.setItem(\"todos\", temp);\n//     }\n//   }\n//   render() {\n//     return (\n//       <div className=\"container\">\n//         <div className=\"inner\">\n//           <Header />\n//           <InputTodo addTodoProps={this.addTodoItem} />\n//           <TodosList\n//             todos={this.state.todos}\n//             handleChangeProps={this.handleChange}\n//             deleteTodoProps={this.delTodo}\n//             setUpdate={this.setUpdate}\n//           />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// export default TodoContainer;","map":{"version":3,"sources":["/Users/newbins/Documents/react/todo/src/functionBased/components/TodoContainer.js"],"names":["React","useState","useEffect","Route","Switch","TodosList","Header","InputTodo","About","NotMatch","Navbar","v4","uuidv4","TodoContainer","getInitialTodos","todos","setTodos","handleChange","id","prevState","map","todo","completed","delTodo","filter","addTodoItem","title","newTodo","setUpdate","updatedTitle","temp","localStorage","getItem","savedTodos","JSON","parse","stringify","setItem"],"mappings":"qdAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,KAAT,CAAgBC,MAAhB,KAA8B,kBAA9B,CAEA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,gBAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,mBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CAEA,OAASC,EAAE,GAAIC,CAAAA,MAAf,KAA6B,MAA7B,C,6IAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,eACAZ,QAAQ,CAACa,eAAe,EAAhB,CADR,wCACnBC,KADmB,eACZC,QADY,eAG1B,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,EAAD,CAAQ,CAC3BF,QAAQ,CAAC,SAACG,SAAD,QACPA,CAAAA,SAAS,CAACC,GAAV,CAAc,SAACC,IAAD,CAAU,CACtB,GAAIA,IAAI,CAACH,EAAL,GAAYA,EAAhB,CAAoB,CAClB,sCACKG,IADL,MAEEC,SAAS,CAAE,CAACD,IAAI,CAACC,SAFnB,GAID,CACD,MAAOD,CAAAA,IAAP,CACD,CARD,CADO,EAAD,CAAR,CAWD,CAZD,CAcA,GAAME,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACL,EAAD,CAAQ,CACtBF,QAAQ,oBACHD,KAAK,CAACS,MAAN,CAAa,SAACH,IAAD,CAAU,CACxB,MAAOA,CAAAA,IAAI,CAACH,EAAL,GAAYA,EAAnB,CACD,CAFE,CADG,EAAR,CAKD,CAND,CAQA,GAAMO,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC7B,GAAMC,CAAAA,OAAO,CAAG,CACdT,EAAE,CAAEN,MAAM,EADI,CAEdc,KAAK,CAAEA,KAFO,CAGdJ,SAAS,CAAE,KAHG,CAAhB,CAKAN,QAAQ,8BAAKD,KAAL,GAAYY,OAAZ,GAAR,CACD,CAPD,CASA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,YAAD,CAAeX,EAAf,CAAsB,CACtCF,QAAQ,CACND,KAAK,CAACK,GAAN,CAAU,SAACC,IAAD,CAAU,CAClB,GAAIA,IAAI,CAACH,EAAL,GAAYA,EAAhB,CAAoB,CAClBG,IAAI,CAACK,KAAL,CAAaG,YAAb,CACD,CACD,MAAOR,CAAAA,IAAP,CACD,CALD,CADM,CAAR,CAQD,CATD,CAWA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA,QAASP,CAAAA,eAAT,EAA2B,CACzB;AACA,GAAMgB,CAAAA,IAAI,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAb,CACA,GAAMC,CAAAA,UAAU,CAAGC,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAnB,CACA,MAAOG,CAAAA,UAAU,EAAI,EAArB,CACD,CAED/B,SAAS,CAAC,UAAM,CACd;AACA,GAAM4B,CAAAA,IAAI,CAAGI,IAAI,CAACE,SAAL,CAAerB,KAAf,CAAb,CACAgB,YAAY,CAACM,OAAb,CAAqB,OAArB,CAA8BP,IAA9B,EACD,CAJQ,CAIN,CAACf,KAAD,CAJM,CAAT,CAMA,mBACE,wCACE,KAAC,MAAD,IADF,cAEE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,uBACE,YAAK,SAAS,CAAC,WAAf,uBACE,aAAK,SAAS,CAAC,OAAf,wBACE,KAAC,MAAD,IADF,cAEE,KAAC,SAAD,EAAW,YAAY,CAAEU,WAAzB,EAFF,cAGE,KAAC,SAAD,EACE,KAAK,CAAEV,KADT,CAEE,iBAAiB,CAAEE,YAFrB,CAGE,eAAe,CAAEM,OAHnB,CAIE,SAAS,CAAEK,SAJb,EAHF,GADF,EADF,EADF,cAeE,KAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,uBACE,KAAC,KAAD,IADF,EAfF,cAkBE,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,uBACE,KAAC,QAAD,IADF,EAlBF,GAFF,GADF,CA2BD,CAhGD,CAkGA,cAAef,CAAAA,aAAf,CAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport TodosList from \"./TodosList\";\nimport Header from \"./Header\";\nimport InputTodo from \"./InputTodo\";\nimport About from \"../pages/About\";\nimport NotMatch from \"../pages/NotMatch\";\nimport Navbar from \"./Navbar\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst TodoContainer = () => {\n  const [todos, setTodos] = useState(getInitialTodos());\n\n  const handleChange = (id) => {\n    setTodos((prevState) =>\n      prevState.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n        return todo;\n      })\n    );\n  };\n\n  const delTodo = (id) => {\n    setTodos([\n      ...todos.filter((todo) => {\n        return todo.id !== id;\n      }),\n    ]);\n  };\n\n  const addTodoItem = (title) => {\n    const newTodo = {\n      id: uuidv4(),\n      title: title,\n      completed: false,\n    };\n    setTodos([...todos, newTodo]);\n  };\n\n  const setUpdate = (updatedTitle, id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          todo.title = updatedTitle;\n        }\n        return todo;\n      })\n    );\n  };\n\n  // useEffect(() => {\n  //   console.log(\"test run\")\n\n  //   // getting stored items\n  //   const temp = localStorage.getItem(\"todos\")\n  //   const loadedTodos = JSON.parse(temp)\n\n  //   if (loadedTodos) {\n  //     setTodos(loadedTodos)\n  //   }\n  // }, [setTodos]);\n  function getInitialTodos() {\n    //getting stored items\n    const temp = localStorage.getItem(\"todos\");\n    const savedTodos = JSON.parse(temp);\n    return savedTodos || [];\n  }\n\n  useEffect(() => {\n    // storing todos items\n    const temp = JSON.stringify(todos);\n    localStorage.setItem(\"todos\", temp);\n  }, [todos]);\n\n  return (\n    <>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\">\n          <div className=\"container\">\n            <div className=\"inner\">\n              <Header />\n              <InputTodo addTodoProps={addTodoItem} />\n              <TodosList\n                todos={todos}\n                handleChangeProps={handleChange}\n                deleteTodoProps={delTodo}\n                setUpdate={setUpdate}\n              />\n            </div>\n          </div>\n        </Route>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"*\">\n          <NotMatch />\n        </Route>\n      </Switch>\n    </>\n  );\n};\n\nexport default TodoContainer;\n\n// import React from \"react\";\n\n// import TodosList from \"./TodosList\";\n// import Header from \"./Header\";\n// import InputTodo from \"./InputTodo\";\n\n// import { v4 as uuidv4 } from \"uuid\";\n\n// class TodoContainer extends React.Component {\n//   state = {\n//     todos: [],\n//   };\n\n//   handleChange = (id) => {\n//     this.setState((prevState) => ({\n//       todos: prevState.todos.map((todo) => {\n//         if (todo.id === id) {\n//           return {\n//             ...todo,\n//             completed: !todo.completed,\n//           };\n//         }\n//         return todo;\n//       }),\n//     }));\n//   };\n\n//   delTodo = (id) => {\n//     this.setState({\n//       todos: [\n//         ...this.state.todos.filter((todo) => {\n//           return todo.id !== id;\n//         }),\n//       ],\n//     });\n//   };\n\n//   addTodoItem = (title) => {\n//     const newTodo = {\n//       id: uuidv4(),\n//       title: title,\n//       completed: false,\n//     };\n//     this.setState({\n//       todos: [...this.state.todos, newTodo],\n//     });\n//   };\n\n//   setUpdate = (updatedTitle, id) => {\n//     this.setState({\n//       todos: this.state.todos.map((todo) => {\n//         if (todo.id === id) {\n//           todo.title = updatedTitle;\n//         }\n//         return todo;\n//       }),\n//     });\n//   };\n\n//   //   componentDidMount() {\n//   //     fetch(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\n//   //       .then(response => response.json())\n//   //       .then(data => this.setState({ todos: data }));\n//   //   }\n//   componentDidMount() {\n//     const temp = localStorage.getItem(\"todos\");\n//     const loadedTodos = JSON.parse(temp);\n//     if (loadedTodos) {\n//       this.setState({\n//         todos: loadedTodos,\n//       });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.todos !== this.state.todos) {\n//       const temp = JSON.stringify(this.state.todos);\n//       localStorage.setItem(\"todos\", temp);\n//     }\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"container\">\n//         <div className=\"inner\">\n//           <Header />\n//           <InputTodo addTodoProps={this.addTodoItem} />\n//           <TodosList\n//             todos={this.state.todos}\n//             handleChangeProps={this.handleChange}\n//             deleteTodoProps={this.delTodo}\n//             setUpdate={this.setUpdate}\n//           />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default TodoContainer;\n"]},"metadata":{},"sourceType":"module"}