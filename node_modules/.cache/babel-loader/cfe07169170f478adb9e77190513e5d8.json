{"ast":null,"code":"import _slicedToArray from\"/Users/newbins/Documents/react/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{FaTrash}from\"react-icons/fa\";import styles from\"./TodoItem.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TodoItem=function TodoItem(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),editing=_useState2[0],setEditing=_useState2[1];var handleEditing=function handleEditing(){setEditing(true);};var handleUpdatedDone=function handleUpdatedDone(event){if(event.key===\"Enter\"){setEditing(false);}};useEffect(function(){console.log(\"Cleaning up...\");},[]);var completedStyle={fontStyle:\"italic\",color:\"#595959\",opacity:0.4,textDecoration:\"line-through\"};var _props$todo=props.todo,completed=_props$todo.completed,id=_props$todo.id,title=_props$todo.title;var viewMode={};var editMode={};if(editing){viewMode.display=\"none\";}else{editMode.display=\"none\";}return/*#__PURE__*/_jsxs(\"li\",{className:styles.item,children:[/*#__PURE__*/_jsxs(\"div\",{onDoubleClick:handleEditing,style:viewMode,children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:styles.checkbox,checked:completed,onChange:function onChange(){return props.handleChangeProps(id);}}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return props.deleteTodoProps(id);},children:/*#__PURE__*/_jsx(FaTrash,{style:{color:\"orangered\",fontSize:\"16px\"}})}),/*#__PURE__*/_jsx(\"span\",{style:completed?completedStyle:null,children:title})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",style:editMode,value:title,className:styles.textInput,onChange:function onChange(e){props.setUpdate(e.target.value,id);},onKeyDown:handleUpdatedDone})]});};// function TodoItem(props) {\n//   return <li>{props.todo.title}</li>;\n// }\nexport default TodoItem;","map":{"version":3,"sources":["/Users/newbins/Documents/react/todo/src/functionBased/components/TodoItem.js"],"names":["React","useState","useEffect","FaTrash","styles","TodoItem","props","editing","setEditing","handleEditing","handleUpdatedDone","event","key","console","log","completedStyle","fontStyle","color","opacity","textDecoration","todo","completed","id","title","viewMode","editMode","display","item","checkbox","handleChangeProps","deleteTodoProps","fontSize","textInput","e","setUpdate","target","value"],"mappings":"0JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,OAAT,KAAwB,gBAAxB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,uBAAnB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,eACIL,QAAQ,CAAC,KAAD,CADZ,wCACnBM,OADmB,eACVC,UADU,eAG1B,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BD,UAAU,CAAC,IAAD,CAAV,CACD,CAFD,CAIA,GAAME,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAW,CACnC,GAAIA,KAAK,CAACC,GAAN,GAAc,OAAlB,CAA2B,CACzBJ,UAAU,CAAC,KAAD,CAAV,CACD,CACF,CAJD,CAMAN,SAAS,CAAC,UAAM,CACdW,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACD,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMC,CAAAA,cAAc,CAAG,CACrBC,SAAS,CAAE,QADU,CAErBC,KAAK,CAAE,SAFc,CAGrBC,OAAO,CAAE,GAHY,CAIrBC,cAAc,CAAE,cAJK,CAAvB,CAjB0B,gBAuBOb,KAAK,CAACc,IAvBb,CAuBlBC,SAvBkB,aAuBlBA,SAvBkB,CAuBPC,EAvBO,aAuBPA,EAvBO,CAuBHC,KAvBG,aAuBHA,KAvBG,CAwB1B,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CAEA,GAAIlB,OAAJ,CAAa,CACXiB,QAAQ,CAACE,OAAT,CAAmB,MAAnB,CACD,CAFD,IAEO,CACLD,QAAQ,CAACC,OAAT,CAAmB,MAAnB,CACD,CACD,mBACE,YAAI,SAAS,CAAEtB,MAAM,CAACuB,IAAtB,wBACE,aAAK,aAAa,CAAElB,aAApB,CAAmC,KAAK,CAAEe,QAA1C,wBACE,cACE,IAAI,CAAC,UADP,CAEE,SAAS,CAAEpB,MAAM,CAACwB,QAFpB,CAGE,OAAO,CAAEP,SAHX,CAIE,QAAQ,CAAE,0BAAMf,CAAAA,KAAK,CAACuB,iBAAN,CAAwBP,EAAxB,CAAN,EAJZ,EADF,cAOE,eAAQ,OAAO,CAAE,yBAAMhB,CAAAA,KAAK,CAACwB,eAAN,CAAsBR,EAAtB,CAAN,EAAjB,uBACE,KAAC,OAAD,EAAS,KAAK,CAAE,CAAEL,KAAK,CAAE,WAAT,CAAsBc,QAAQ,CAAE,MAAhC,CAAhB,EADF,EAPF,cAUE,aAAM,KAAK,CAAEV,SAAS,CAAGN,cAAH,CAAoB,IAA1C,UAAiDQ,KAAjD,EAVF,GADF,cAaE,cACE,IAAI,CAAC,MADP,CAEE,KAAK,CAAEE,QAFT,CAGE,KAAK,CAAEF,KAHT,CAIE,SAAS,CAAEnB,MAAM,CAAC4B,SAJpB,CAKE,QAAQ,CAAE,kBAACC,CAAD,CAAO,CACf3B,KAAK,CAAC4B,SAAN,CAAgBD,CAAC,CAACE,MAAF,CAASC,KAAzB,CAAgCd,EAAhC,EACD,CAPH,CAQE,SAAS,CAAEZ,iBARb,EAbF,GADF,CA0BD,CA1DD,CA4DA;AACA;AACA;AAEA,cAAeL,CAAAA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { FaTrash } from \"react-icons/fa\"\n\nimport styles from \"./TodoItem.module.css\";\n\nconst TodoItem = (props) => {\n  const [editing, setEditing] = useState(false);\n\n  const handleEditing = () => {\n    setEditing(true);\n  };\n\n  const handleUpdatedDone = (event) => {\n    if (event.key === \"Enter\") {\n      setEditing(false);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Cleaning up...\");\n  }, []);\n\n  const completedStyle = {\n    fontStyle: \"italic\",\n    color: \"#595959\",\n    opacity: 0.4,\n    textDecoration: \"line-through\",\n  };\n  const { completed, id, title } = props.todo;\n  let viewMode = {};\n  let editMode = {};\n\n  if (editing) {\n    viewMode.display = \"none\";\n  } else {\n    editMode.display = \"none\";\n  }\n  return (\n    <li className={styles.item}>\n      <div onDoubleClick={handleEditing} style={viewMode}>\n        <input\n          type=\"checkbox\"\n          className={styles.checkbox}\n          checked={completed}\n          onChange={() => props.handleChangeProps(id)}\n        />\n        <button onClick={() => props.deleteTodoProps(id)}>\n          <FaTrash style={{ color: \"orangered\", fontSize: \"16px\"}}/>\n        </button>\n        <span style={completed ? completedStyle : null}>{title}</span>\n      </div>\n      <input\n        type=\"text\"\n        style={editMode}\n        value={title}\n        className={styles.textInput}\n        onChange={(e) => {\n          props.setUpdate(e.target.value, id);\n        }}\n        onKeyDown={handleUpdatedDone}\n      />\n    </li>\n  );\n};\n\n// function TodoItem(props) {\n//   return <li>{props.todo.title}</li>;\n// }\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}